[{"C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\login.js":"1","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\registrationform.js":"2","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\register.js":"3","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\forgotPassword.js":"4","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\index.js":"5","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\App.js":"6","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\helpers\\config.js":"7","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\dashboard.js":"8","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\navigation.js":"9","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\reportWebVitals.js":"10"},{"size":4999,"mtime":1608839032371,"results":"11","hashOfConfig":"12"},{"size":4716,"mtime":1607480688545,"results":"13","hashOfConfig":"12"},{"size":9389,"mtime":1607480608724,"results":"14","hashOfConfig":"12"},{"size":4449,"mtime":1607480773066,"results":"15","hashOfConfig":"12"},{"size":517,"mtime":1608838839926,"results":"16","hashOfConfig":"12"},{"size":794,"mtime":1608838829356,"results":"17","hashOfConfig":"12"},{"size":127,"mtime":1608825855465,"results":"18","hashOfConfig":"12"},{"size":4561,"mtime":1608840054722,"results":"19","hashOfConfig":"12"},{"size":4347,"mtime":1608839198409,"results":"20","hashOfConfig":"12"},{"size":375,"mtime":1607227230628,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"187shyl",{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\login.js",["48","49","50"],"C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\registrationform.js",["51","52","53","54","55"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport moment from 'moment';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { colors } from '../helpers/config.js';\r\n\r\nexport default function RegistrationForm() {\r\n  const styles = useStyles();\r\n  // const [part, setPart] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [id, setId] = useState(null);\r\n  const [symptom, setSymptom] = useState(null);\r\n  const [firstday, setFirstday] = useState(moment().format(\"DD/MM/YYYY\"));\r\n  const [anamnesis, setAnamnesis] = useState(null);\r\n\r\n  return (\r\n    <Grid container xs={12} sm={8} md={5} className={styles.root}>\r\n      {/* <Grid item xs={false} sm={4} md={7} className={styles.image}/> */}\r\n      {/* <Grid item > */}\r\n        <div className={styles.paper}>\r\n          <Avatar className={styles.avatar}>\r\n            <ListAltIcon /> \r\n          </Avatar>\r\n          <Typography variant=\"h5\">\r\n            Medical Registration Form\r\n          </Typography>\r\n          <form className={styles.form} noValidate>\r\n            <Grid container>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField \r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"patient-name\"\r\n                label=\"Patient name\"\r\n                onTextChange = {text => setName(text)}\r\n                style={{marginRight: '4px'}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField \r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"identification\"\r\n                label=\"ID\"\r\n                onTextChange = {text => setId(text)}\r\n                style={{marginLeft: '4px'}}\r\n              />\r\n            </Grid>\r\n            <TextField \r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"symptom\"\r\n              label=\"Describe your health problems\"\r\n              onTextChange = {text => setSymptom(text)}\r\n            />\r\n            <TextField \r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"anamnesis\"\r\n              label=\"Anamnesis\"\r\n              onTextChange={text => setAnamnesis(text)}\r\n            />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker \r\n                style={{marginTop: '16px'}}\r\n                disableToolbar\r\n                fullWidth\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                format=\"MM/dd/yyyy\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Set appointment date\"\r\n                value={firstday}\r\n                onChange={val => {setFirstday(val)}}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={styles.submit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      {/* </Grid> */}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    direction: \"row\",\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  },\r\n  // image: {\r\n  //   backgroundImage: \"url(\"+\"https://c1.wallpaperflare.com/preview/937/818/491/stethoscope-doctor-md-medical-health-hospital.jpg\"+\")\",\r\n  //   backgroundRepeat: 'no-repeat',\r\n  //   backgroundSize: 'cover',\r\n  //   backgroundPosition: 'center',\r\n  // },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: colors.primary,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: colors.primary,\r\n    color: 'black',\r\n  },\r\n}));","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\register.js",["56","57","58","59","60","61"],"import React, { useState } from 'react';\r\nimport { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\n// import Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport {colors} from '../helpers/config';\r\nimport { Route, Link, BrowserRouter } from 'react-router-dom'\r\nimport Login from './login';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function Register(){\r\n  const styles = useStyles();\r\n  const [firstName, setFirstName]= useState('');\r\n  const [lastName, setLastName]= useState('');\r\n  const [sex,setSex] = useState('');\r\n  const [phone, setPhone] =useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [dob, setDob] = useState(moment().format(\"YYYY-MM-DD\"));\r\n  const [street, setStreet] = useState('');\r\n  const [district, setDistrict] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [hover, setHover]=useState(false);\r\n\r\n  async function onSignUp(){\r\n    const data={\r\n      \"firstname\": firstName,\r\n      lastname: lastName,\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n      phone: phone,\r\n      address: street +\", \"+district+\", \"+city,\r\n      sex: sex,\r\n      dob: dob,\r\n      role: role,\r\n    };\r\n    // console.log(data)\r\n    let res = await axios.post('http://localhost:8080/api/auth/signup', data)\r\n    console.log(res.data)\r\n  }\r\n  return(\r\n    <Grid container className={styles.root}>\r\n      <Grid item xs={false} sm={4} md={7} className={styles.image}/>\r\n      <Grid item xs={12} sm={8} md={5}>\r\n        <div className={styles.paper}>\r\n          <Avatar className={styles.avatar} onClick={onSignUp} >\r\n            <LockOpenIcon />\r\n          </Avatar>\r\n          <Typography variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={styles.form} Validate>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6} sm={5}>\r\n                <TextField \r\n                  name=\"firstName\"\r\n                  // variant=\"outlined\"\r\n                  required={true}\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  onChange={e => setFirstName(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={5}>\r\n                <TextField \r\n                  name=\"lastName\"\r\n                  // variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  onChange ={e => setLastName(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2} sm={2}>\r\n                <FormControl fullWidth className={styles.formControl}>\r\n                  <InputLabel>Sex</InputLabel>\r\n                  <Select\r\n                    id=\"sex\"\r\n                    value={sex}\r\n                    onChange={e=>{setSex(e.target.value)}}\r\n                    label=\"Sex\"\r\n                  >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={'Male'}>Male</MenuItem>\r\n                  <MenuItem value={'Female'}>Female</MenuItem>\r\n                </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={8} sm={8}>\r\n                <TextField\r\n                  // variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  autoComplete=\"phone\"\r\n                  onChange={e=>setPhone(e.target.value)}\r\n                />\r\n                </Grid>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                 <Grid item xs={4} sm={4}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"yyyy-MM-dd\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"DOB\"\r\n                    value={dob}\r\n                    onChange={e => {setDob(e)}}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n              <Grid item xs={8} sm={8}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  onChange={e=>setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} sm={4}>\r\n                <FormControl fullWidth className={styles.formControl}>\r\n                  <InputLabel>Role</InputLabel>\r\n                    <Select\r\n                      id=\"role\"\r\n                      value={role}\r\n                      onChange={e=>{setRole([e.target.value])}}\r\n                      label=\"role\"\r\n                    >\r\n                    <MenuItem value={\"Patient\"}>Patient</MenuItem>\r\n                    <MenuItem value={'Docter'}>Docter</MenuItem>\r\n                    <MenuItem value={'Admin'}>Admin</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={4} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"Street\"\r\n                  label=\"Street\"\r\n                  onChange={e=>setStreet(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={4} sm={4}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"district\"\r\n                  label=\"District\"\r\n                  onChange={e=>setDistrict(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  required\r\n                  id=\"city\"\r\n                  label=\"City\"\r\n                  onChange = {e => setCity(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  onChange={e=>setUsername(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"pass\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  onChange={e=>setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            // color='#81b3cb'\r\n            className={styles.submit}\r\n            onClick={onSignUp}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\"\r\n                style={hover ? {textDecoration: 'none', color: '#555555'} : {textDecoration: 'none', color: '#81b3cb'}}\r\n                onMouseEnter={()=>setHover(true)} onMouseLeave={()=>setHover(false)}\r\n              >\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n      <BrowserRouter>\r\n        {/* <Route exact path=\"/\" component={Register}/> */}\r\n        <Route path=\"/login\" component={Login}/>\r\n      </BrowserRouter>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n  root:{\r\n    minHeight: '100vh'\r\n  },\r\n  row:{\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(\"+\"https://c1.wallpaperflare.com/preview/937/818/491/stethoscope-doctor-md-medical-health-hospital.jpg\"+\")\",\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper:{\r\n    margin: theme.spacing(6, 4),\r\n    // backgroundColor: 'red',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar:{\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#81b3cb'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#81b3cb'\r\n  }\r\n}))",["62","63"],"C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\forgotPassword.js",["64","65","66","67","68","69"],"import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { colors } from '../helpers/config.js';\r\n\r\nconst Response = () => {\r\n  const styles = useStyles();\r\n\r\n  return(\r\n    <Grid container xs=\"10\" justify=\"center\">\r\n      <Typography component=\"h1\" variant=\"h5\" align=\"center\" paragraph>\r\n        Password reset request sent\r\n      </Typography>\r\n      <Typography variant =\"body2\" align=\"justify\" paragraph>\r\n        A password message was sent to your email address. Please click the link in that message to reset your password.\r\n      </Typography>\r\n      <Typography variant =\"body2\" align=\"justify\">\r\n        If you do not receive the password message within a few moments, please check your Spam folder or other filtering tools.\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default function ForgotPassword() {\r\n  const styles = useStyles();\r\n  const [done, setDone] = useState(false);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={styles.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={styles.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={styles.paper}>\r\n          <Avatar className={styles.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          {done ? <Response/> : \r\n          <Grid container justify=\"center\">\r\n            <Typography component=\"h1\" variant=\"h5\" gutterBottom>\r\n              Reset your password\r\n            </Typography>\r\n            <Typography variant=\"body2\" align=\"left\">\r\n              Please enter your email address to recover your password.\r\n            </Typography>\r\n            <form className={styles.form} noValidate>\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onTextChange={text => setEmail(text)}\r\n              />\r\n      \r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={styles.submit}\r\n                onClick={() => setDone(true)}\r\n              >\r\n                Reset password\r\n              </Button>\r\n              {/* <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Link href=\"/login\" variant=\"body2\" underline=\"none\">\r\n                    {\"Login\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid> */}\r\n            </form>\r\n          </Grid>\r\n          }\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://c1.wallpaperflare.com/preview/937/818/491/stethoscope-doctor-md-medical-health-hospital.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: colors.primary,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: colors.primary,\r\n    color: 'black',\r\n  },\r\n  link: {\r\n    color: colors.primary,\r\n    textDecoration: 'none',\r\n  },\r\n  hover: {\r\n    color: colors.grey,\r\n  }\r\n}));","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\index.js",[],"C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\App.js",["70","71"],"C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\helpers\\config.js",[],"C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\views\\dashboard.js",["72","73","74","75","76"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from 'axios';\r\nimport { colors } from \"../helpers/config\";\r\nimport Navigation from \"../navigation\";\r\nimport { Button, Icon, Input, InputAdornment, InputLabel, FormControl, Table, TableSortLabel, TextField, Typography, Grid } from \"@material-ui/core\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst UserData = () => {\r\n\tconst classes = useStyles();\r\n\tconst [data, setData] = useState([]);\r\n\tconst [sortDir, setSortDir] = useState(\"asc\");\r\n\r\n\tconst getData = async () => {\r\n\t\ttry{\r\n\t\t\tlet res = await axios.get('http://localhost:8080/api/admin/user', {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Authorization\": `Bearer ${sessionStorage.getItem(\"userToken\")}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tsetData(res.data);\r\n\t\t} \r\n\t\tcatch(error){\r\n\t\t\tthrow new Error(\"Error: \", error);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => getData(), []);\r\n\r\n\treturn (\r\n\t\t<TableContainer component={Paper}>\r\n\t\t\t<Table className={classes.table} aria-label=\"sticky table\" size=\"small\">\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TableCell align=\"left\">ID</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\" sortDirection={sortDir} onClick={() => setSortDir(sortDir === \"asc\" ? \"desc\" : \"asc\")}>\r\n\t\t\t\t\t\t\t<TableSortLabel direction={sortDir}>Last name</TableSortLabel>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\">\r\n\t\t\t\t\t\t\t<TableSortLabel>First name</TableSortLabel>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\">Phone</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\">Email</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\">D.O.B</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\">Sex</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\">Address</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\">Role</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"left\">Action</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{data.map((item) => (\r\n\t\t\t\t\t\t<TableRow className={classes.row}>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">{item.id}</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">{item.firstname}</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">{item.lastname}</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">{item.phone}</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.raw_data}>\r\n\t\t\t\t\t\t\t\t{item.email}\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">{new Date(item.dob).toLocaleDateString()}</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">{item.sex}</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.row}>\r\n\t\t\t\t\t\t\t\t{item.address}\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">{item.roles[0].name}</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" size=\"small\" disableElevation style={{ marginRight: 10 }}>\r\n\t\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" size=\"small\" disableElevation>\r\n\t\t\t\t\t\t\t\t\t<DeleteSweepIcon />\r\n\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n};\r\n\r\nexport default function Dashboard() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<Navigation dashboard />\r\n\t\t\t<Grid container>\r\n\t\t\t\t{/* <DataGrid columns={columns}/> */}\r\n\t\t\t\t{/* <Grid item xs=\"11\"> */}\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"search-input\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\tstartAdornment: (\r\n\t\t\t\t\t\t\t<InputAdornment position=\"start\">\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tinputProps={{\r\n\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.searchInput}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<UserData />\r\n\t\t\t\t{/* </Grid> */}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: \"max-content\",\r\n\t\tminWidth: \"100vw\"\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 650,\r\n\t},\r\n\trow: {\r\n\t\twidth: \"max-content\",\r\n\t\ttextTransform: \"capitalize\",\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: colors.highlight,\r\n\t\t},\r\n\t},\r\n\tlimit_cell: {\r\n\t\tmaxWidth: 400,\r\n\t},\r\n\tbutton: {\r\n\t\ttextTransform: 'capitalize',\r\n\t},\r\n\traw_data: {\r\n\t\ttextTransform: 'none',\r\n\t},\r\n\tsearchInput: {\r\n\t\tmargin: 20,\r\n\t}\r\n}));\r\n","C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\navigation.js",["77","78","79","80","81"],"C:\\Users\\neko_\\Desktop\\Github\\medical-management-website\\src\\reportWebVitals.js",[],["82","83"],{"ruleId":"84","severity":1,"message":"85","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":24},{"ruleId":"84","severity":1,"message":"88","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":16},{"ruleId":"84","severity":1,"message":"89","line":22,"column":15,"nodeType":"86","messageId":"87","endLine":22,"endColumn":21},{"ruleId":"84","severity":1,"message":"90","line":12,"column":3,"nodeType":"86","messageId":"87","endLine":12,"endColumn":21},{"ruleId":"84","severity":1,"message":"91","line":21,"column":10,"nodeType":"86","messageId":"87","endLine":21,"endColumn":14},{"ruleId":"84","severity":1,"message":"92","line":22,"column":10,"nodeType":"86","messageId":"87","endLine":22,"endColumn":12},{"ruleId":"84","severity":1,"message":"93","line":23,"column":10,"nodeType":"86","messageId":"87","endLine":23,"endColumn":17},{"ruleId":"84","severity":1,"message":"94","line":25,"column":10,"nodeType":"86","messageId":"87","endLine":25,"endColumn":19},{"ruleId":"84","severity":1,"message":"95","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":24},{"ruleId":"84","severity":1,"message":"90","line":17,"column":3,"nodeType":"86","messageId":"87","endLine":17,"endColumn":21},{"ruleId":"84","severity":1,"message":"96","line":23,"column":9,"nodeType":"86","messageId":"87","endLine":23,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":250,"column":28,"nodeType":"99","messageId":"100","endLine":250,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":250,"column":130,"nodeType":"99","messageId":"100","endLine":250,"endColumn":131},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"84","severity":1,"message":"85","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":24},{"ruleId":"84","severity":1,"message":"88","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":16},{"ruleId":"84","severity":1,"message":"105","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":12},{"ruleId":"84","severity":1,"message":"106","line":11,"column":8,"nodeType":"86","messageId":"87","endLine":11,"endColumn":11},{"ruleId":"84","severity":1,"message":"107","line":19,"column":9,"nodeType":"86","messageId":"87","endLine":19,"endColumn":15},{"ruleId":"84","severity":1,"message":"108","line":39,"column":10,"nodeType":"86","messageId":"87","endLine":39,"endColumn":15},{"ruleId":"84","severity":1,"message":"109","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"84","severity":1,"message":"105","line":3,"column":17,"nodeType":"86","messageId":"87","endLine":3,"endColumn":21},{"ruleId":"84","severity":1,"message":"110","line":6,"column":18,"nodeType":"86","messageId":"87","endLine":6,"endColumn":22},{"ruleId":"84","severity":1,"message":"111","line":6,"column":24,"nodeType":"86","messageId":"87","endLine":6,"endColumn":29},{"ruleId":"84","severity":1,"message":"112","line":6,"column":47,"nodeType":"86","messageId":"87","endLine":6,"endColumn":57},{"ruleId":"84","severity":1,"message":"113","line":6,"column":59,"nodeType":"86","messageId":"87","endLine":6,"endColumn":70},{"ruleId":"84","severity":1,"message":"114","line":6,"column":106,"nodeType":"86","messageId":"87","endLine":6,"endColumn":116},{"ruleId":"84","severity":1,"message":"115","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"116","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":14},{"ruleId":"84","severity":1,"message":"117","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":14},{"ruleId":"84","severity":1,"message":"118","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":15},{"ruleId":"84","severity":1,"message":"119","line":6,"column":17,"nodeType":"86","messageId":"87","endLine":6,"endColumn":23},{"ruleId":"101","replacedBy":"120"},{"ruleId":"103","replacedBy":"121"},"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'setMsg' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'name' is assigned a value but never used.","'id' is assigned a value but never used.","'symptom' is assigned a value but never used.","'anamnesis' is assigned a value but never used.","'Component' is defined but never used.","'colors' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'Link' is defined but never used.","'Box' is defined but never used.","'styles' is assigned a value but never used.","'email' is assigned a value but never used.","'logo' is defined but never used.","'Icon' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'styles' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.",["122"],["123"],"no-global-assign","no-unsafe-negation"]