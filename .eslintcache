[{"E:\\medical-management-website\\src\\index.js":"1","E:\\medical-management-website\\src\\views\\register.js":"2","E:\\medical-management-website\\src\\views\\forgotPassword.js":"3","E:\\medical-management-website\\src\\views\\registrationform.js":"4","E:\\medical-management-website\\src\\App.js":"5","E:\\medical-management-website\\src\\views\\login.js":"6","E:\\medical-management-website\\src\\views\\dashboard.js":"7"},{"size":631,"mtime":1609081317062,"results":"8","hashOfConfig":"9"},{"size":10195,"mtime":1609403767788,"results":"10","hashOfConfig":"9"},{"size":4449,"mtime":1608784295372,"results":"11","hashOfConfig":"9"},{"size":4716,"mtime":1608784295373,"results":"12","hashOfConfig":"9"},{"size":1097,"mtime":1608919665316,"results":"13","hashOfConfig":"9"},{"size":4362,"mtime":1609081317065,"results":"14","hashOfConfig":"9"},{"size":11473,"mtime":1609081317064,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1tnlck9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"E:\\medical-management-website\\src\\index.js",[],["33","34"],"E:\\medical-management-website\\src\\views\\register.js",["35","36","37","38","39","40","41","42","43"],"E:\\medical-management-website\\src\\views\\forgotPassword.js",["44","45","46","47","48","49"],"import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { colors } from '../helpers/config.js';\r\n\r\nconst Response = () => {\r\n  const styles = useStyles();\r\n\r\n  return(\r\n    <Grid container xs=\"10\" justify=\"center\">\r\n      <Typography component=\"h1\" variant=\"h5\" align=\"center\" paragraph>\r\n        Password reset request sent\r\n      </Typography>\r\n      <Typography variant =\"body2\" align=\"justify\" paragraph>\r\n        A password message was sent to your email address. Please click the link in that message to reset your password.\r\n      </Typography>\r\n      <Typography variant =\"body2\" align=\"justify\">\r\n        If you do not receive the password message within a few moments, please check your Spam folder or other filtering tools.\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default function ForgotPassword() {\r\n  const styles = useStyles();\r\n  const [done, setDone] = useState(false);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={styles.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={styles.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={styles.paper}>\r\n          <Avatar className={styles.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          {done ? <Response/> : \r\n          <Grid container justify=\"center\">\r\n            <Typography component=\"h1\" variant=\"h5\" gutterBottom>\r\n              Reset your password\r\n            </Typography>\r\n            <Typography variant=\"body2\" align=\"left\">\r\n              Please enter your email address to recover your password.\r\n            </Typography>\r\n            <form className={styles.form} noValidate>\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onTextChange={text => setEmail(text)}\r\n              />\r\n      \r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={styles.submit}\r\n                onClick={() => setDone(true)}\r\n              >\r\n                Reset password\r\n              </Button>\r\n              {/* <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Link href=\"/login\" variant=\"body2\" underline=\"none\">\r\n                    {\"Login\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid> */}\r\n            </form>\r\n          </Grid>\r\n          }\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://c1.wallpaperflare.com/preview/937/818/491/stethoscope-doctor-md-medical-health-hospital.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: colors.primary,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: colors.primary,\r\n    color: 'black',\r\n  },\r\n  link: {\r\n    color: colors.primary,\r\n    textDecoration: 'none',\r\n  },\r\n  hover: {\r\n    color: colors.grey,\r\n  }\r\n}));","E:\\medical-management-website\\src\\views\\registrationform.js",["50","51","52","53","54"],"E:\\medical-management-website\\src\\App.js",["55","56"],"E:\\medical-management-website\\src\\views\\login.js",["57","58","59"],"E:\\medical-management-website\\src\\views\\dashboard.js",["60","61","62","63","64"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from 'axios';\r\nimport { colors } from \"../helpers/config\";\r\nimport Navigation from \"../navigation\";\r\nimport { Button, Dialog, DialogActions, DialogTitle, Icon, Input, InputAdornment, InputLabel, FormControl, Modal, Table, TableFooter, TableSortLabel, TablePagination, TextField, Typography, Grid } from \"@material-ui/core\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// const UpdateForm = (props) => {\r\n\r\n\t\r\n// \tconst resetValue = () => {\r\n// \t\tsetFName(props.item.firstname);\r\n// \t\tsetLName(props.item.lastname);\r\n// \t\tsetAddress(props.item.address);\r\n// \t\tsetDOB(props.item.dob);\r\n// \t}\r\n\r\n\r\n\r\n// \treturn (\r\n\r\n// \t);\r\n// };\r\n\r\nexport default function Dashboard() {\r\n\tconst classes = useStyles();\r\n\tconst [data, setData] = useState([]);\r\n\tconst [page, setPage] = useState(0);\r\n\tconst rowsPerPage = 7;\r\n\tconst [sortDir, setSortDir] = useState(\"asc\");\r\n\t\r\n\tconst [dialogue_open, setOpen] = useState(false);\r\n\tconst [form_open, setFormOpen] = useState(false);\r\n\tconst [query, setQuery] = useState(null);\r\n\tconst [updateItem, setUpdateItem] = useState(null);\r\n\tconst [deleteItem, setDeleteItem] = useState(null);\r\n\r\n\tconst [firstname, setFName] = useState(null);\r\n\tconst [lastname, setLName] = useState(null);\r\n\tconst [address, setAddress] = useState(null);\r\n\tconst [dob, setDOB] = useState(null);\r\n\t\r\n\tconst handleUpdateRequest = (item) => {\r\n\t\tsetUpdateItem(item);\r\n\t\tsetFName(item.firstname);\r\n\t\tsetLName(item.lastname);\r\n\t\tsetAddress(item.address);\r\n\t\tsetDOB(item.dob);\r\n\t\tsetFormOpen(true);\r\n\t}\r\n\r\n\tconst handleDeleteRequest = (item) => {\r\n\t\tsetDeleteItem(item);\r\n\t\tsetOpen(true);\r\n\t}\r\n\r\n\tconst updateData = async () => {\r\n\t\tconst formData = {\r\n\t\t\tfirstname: firstname,\r\n\t\t\tlastname: lastname,\r\n\t\t\taddress: address,\r\n\t\t\tdob: dob,\r\n\t\t};\r\n\r\n\t\ttry{\r\n\t\t\tawait axios.post(`http://localhost:8080/api/admin/user/${updateItem.id}`, formData, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Authorization\" : `Bearer ${sessionStorage.getItem(\"userToken\")}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\talert(\"Updated.\");\r\n\t\t}\r\n\t\tcatch(error){\r\n\t\t\talert(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteUser = async() => {\r\n\t\ttry{\r\n\t\t\tawait axios.delete(`http://localhost:8080/api/admin/user/${deleteItem.id}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Authorization\": `Bearer ${sessionStorage.getItem(\"userToken\")}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetData(data.filter(item => item.id !== deleteItem.id));\r\n\t\t}\r\n\t\tcatch(error){\r\n\t\t\talert(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst getData = async () => {\r\n\t\ttry{\r\n\t\t\tlet res = await axios.get('http://localhost:8080/api/admin/user', {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Authorization\": `Bearer ${sessionStorage.getItem(\"userToken\")}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tsetData(res.data);\r\n\t\t} \r\n\t\tcatch(error){\r\n\t\t\talert(error);\r\n\t\t\t// throw new Error(\"Error: \", error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst searchUser = async (phone) => {\r\n\t\ttry{\r\n\t\t\tlet res = await axios.get(`http://localhost:8080/api/admin/user/find?phone=${phone}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Authorization\": `Bearer ${sessionStorage.getItem(\"userToken\")}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t\tcatch(error){\r\n\t\t\talert(error);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => getData(), []);\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<Navigation dashboard />\r\n\t\t\t<Grid container>\r\n\t\t\t\t{/* <DataGrid columns={columns}/> */}\r\n\t\t\t\t{/* <Grid item xs=\"11\"> */}\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"search-input\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\tstartAdornment: (\r\n\t\t\t\t\t\t\t<InputAdornment position=\"start\">\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(text) => setQuery(text.target.value)}\r\n\t\t\t\t\tonKeyUp={(event) => {\r\n\t\t\t\t\t\tif (!query) {\r\n\t\t\t\t\t\t\tgetData();\r\n\t\t\t\t\t\t} else if (event.keyCode === 13) {\r\n\t\t\t\t\t\t\tsearchUser(query);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={classes.searchInput}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t<Table className={classes.table} aria-label=\"sticky table\" size=\"small\">\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">ID</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\talign=\"left\"\r\n\t\t\t\t\t\t\t\t\tsortDirection={sortDir}\r\n\t\t\t\t\t\t\t\t\tonClick={() => setSortDir(sortDir === \"asc\" ? \"desc\" : \"asc\")}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TableSortLabel direction={sortDir}>Last name</TableSortLabel>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\r\n\t\t\t\t\t\t\t\t\t<TableSortLabel>First name</TableSortLabel>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Username</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Phone</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Email</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">D.O.B</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Sex</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Address</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Role</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">Action</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item) => (\r\n\t\t\t\t\t\t\t\t<TableRow className={classes.row} key={item.id}>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{item.id}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{item.lastname}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{item.firstname}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.raw_data}>\r\n\t\t\t\t\t\t\t\t\t\t{item.username}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{item.phone}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.raw_data}>\r\n\t\t\t\t\t\t\t\t\t\t{item.email}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{new Date(item.dob).toLocaleDateString()}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{item.sex}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.row}>\r\n\t\t\t\t\t\t\t\t\t\t{item.address}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{item.roles[0].name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\r\n\t\t\t\t\t\t\t\t\t\t{/* Edit button */}\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 10 }}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleUpdateRequest(item);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{/* Update form */}\r\n\t\t\t\t\t\t\t\t\t\t{ updateItem ?\r\n\t\t\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\t\t\topen={form_open}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={() => setFormOpen(false)}\r\n\t\t\t\t\t\t\t\t\t\t\taria-labelledby=\"simple-modal-title\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-describedby=\"simple-modal-description\"\t\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<form className={classes.update_form}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CloseIcon onClick={() => { \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// resetValue();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFormOpen(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.closeButton}/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6} sm={5}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\"First name\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={event => setFName(event.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6} sm={7}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange ={event => setLName(event.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Address\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={event => setAddress(event.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat=\"yyyy-MM-dd\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"DOB\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={dob}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={event => {setDOB(event)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFormOpen(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t\t\t\t: null}\r\n\r\n\t\t\t\t\t\t\t\t\t\t{/* Delete button */}\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" size=\"small\" disableElevation onClick={() => handleDeleteRequest(item)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<DeleteSweepIcon />\r\n\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{/* Confirm delete */}\r\n\t\t\t\t\t\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\t\t\t\t\t\topen={dialogue_open}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={() => setOpen(false)}\r\n\t\t\t\t\t\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-describedby=\"alert-dialog-description\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete this user?\"}</DialogTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteUser();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => setOpen(false)} color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableBody>\r\n\r\n\t\t\t\t\t\t<TableFooter>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\t\t\trowsPerPageOptions={7}\r\n\t\t\t\t\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\t\t\t\t\tcount={data.length}\r\n\t\t\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\t\t\tonChangePage={(event, newPage) => setPage(newPage)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableFooter>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\r\n\t\t\t\t{/* </Grid> */}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\twidth: \"max-content\",\r\n\t\tminWidth: \"100vw\",\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 650,\r\n\t},\r\n\trow: {\r\n\t\twidth: \"max-content\",\r\n\t\ttextTransform: \"capitalize\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: colors.highlight,\r\n\t\t},\r\n\t},\r\n\tlimit_cell: {\r\n\t\tmaxWidth: 400,\r\n\t},\r\n\tbutton: {\r\n\t\ttextTransform: \"capitalize\",\r\n\t},\r\n\tcloseButton: {\r\n\t\tcursor: \"pointer\",\r\n\t},\r\n\traw_data: {\r\n\t\ttextTransform: \"none\",\r\n\t},\r\n\tsearchInput: {\r\n\t\tmargin: 20,\r\n\t},\r\n\tupdate_form: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: \"25%\",\r\n\t\twidth: 400,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tborder: \"2px solid #000\",\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t},\r\n\tsubmit: {\r\n\t\tmarginTop: 10\r\n\t}\r\n}));\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":19},{"ruleId":"69","severity":1,"message":"73","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":24},{"ruleId":"69","severity":1,"message":"74","line":17,"column":3,"nodeType":"71","messageId":"72","endLine":17,"endColumn":21},{"ruleId":"69","severity":1,"message":"75","line":23,"column":9,"nodeType":"71","messageId":"72","endLine":23,"endColumn":15},{"ruleId":"69","severity":1,"message":"76","line":25,"column":8,"nodeType":"71","messageId":"72","endLine":25,"endColumn":13},{"ruleId":"69","severity":1,"message":"77","line":27,"column":10,"nodeType":"71","messageId":"72","endLine":27,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":76,"column":20,"nodeType":"80","messageId":"81","endLine":76,"endColumn":22},{"ruleId":"82","severity":1,"message":"83","line":279,"column":28,"nodeType":"80","messageId":"84","endLine":279,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":279,"column":130,"nodeType":"80","messageId":"84","endLine":279,"endColumn":131},{"ruleId":"69","severity":1,"message":"73","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":24},{"ruleId":"69","severity":1,"message":"85","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":16},{"ruleId":"69","severity":1,"message":"86","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":12},{"ruleId":"69","severity":1,"message":"87","line":11,"column":8,"nodeType":"71","messageId":"72","endLine":11,"endColumn":11},{"ruleId":"69","severity":1,"message":"88","line":19,"column":9,"nodeType":"71","messageId":"72","endLine":19,"endColumn":15},{"ruleId":"69","severity":1,"message":"89","line":39,"column":10,"nodeType":"71","messageId":"72","endLine":39,"endColumn":15},{"ruleId":"69","severity":1,"message":"74","line":12,"column":3,"nodeType":"71","messageId":"72","endLine":12,"endColumn":21},{"ruleId":"69","severity":1,"message":"90","line":21,"column":10,"nodeType":"71","messageId":"72","endLine":21,"endColumn":14},{"ruleId":"69","severity":1,"message":"91","line":22,"column":10,"nodeType":"71","messageId":"72","endLine":22,"endColumn":12},{"ruleId":"69","severity":1,"message":"92","line":23,"column":10,"nodeType":"71","messageId":"72","endLine":23,"endColumn":17},{"ruleId":"69","severity":1,"message":"93","line":25,"column":10,"nodeType":"71","messageId":"72","endLine":25,"endColumn":19},{"ruleId":"69","severity":1,"message":"94","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"69","severity":1,"message":"86","line":3,"column":17,"nodeType":"71","messageId":"72","endLine":3,"endColumn":21},{"ruleId":"69","severity":1,"message":"73","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":24},{"ruleId":"69","severity":1,"message":"85","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":16},{"ruleId":"69","severity":1,"message":"95","line":22,"column":15,"nodeType":"71","messageId":"72","endLine":22,"endColumn":21},{"ruleId":"69","severity":1,"message":"96","line":6,"column":54,"nodeType":"71","messageId":"72","endLine":6,"endColumn":58},{"ruleId":"69","severity":1,"message":"97","line":6,"column":60,"nodeType":"71","messageId":"72","endLine":6,"endColumn":65},{"ruleId":"69","severity":1,"message":"98","line":6,"column":83,"nodeType":"71","messageId":"72","endLine":6,"endColumn":93},{"ruleId":"69","severity":1,"message":"99","line":6,"column":95,"nodeType":"71","messageId":"72","endLine":6,"endColumn":106},{"ruleId":"69","severity":1,"message":"100","line":6,"column":179,"nodeType":"71","messageId":"72","endLine":6,"endColumn":189},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'colors' is defined but never used.","'Login' is defined but never used.","'SnackbarProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'styles' is assigned a value but never used.","'email' is assigned a value but never used.","'name' is assigned a value but never used.","'id' is assigned a value but never used.","'symptom' is assigned a value but never used.","'anamnesis' is assigned a value but never used.","'logo' is defined but never used.","'setMsg' is assigned a value but never used.","'Icon' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation"]